const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DwVItUg0.js","assets/ui-D_FIyQ7E.js","assets/vendor-BFl3bqVE.js","assets/firebase-CTJJwFJC.js","assets/index-BA2bQjcR.css"])))=>i.map(i=>d[i]);
var F=Object.defineProperty;var O=(a,i,e)=>i in a?F(a,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[i]=e;var $=(a,i,e)=>O(a,typeof i!="symbol"?i+"":i,e);import{m as q,n as j,p as H,_ as L}from"./index-DwVItUg0.js";import{l as K,P as J,q as G,h as _,_ as m,e as p,i as z,R as S,v as w,t as N,y as B,f as E,x as k}from"./firebase-CTJJwFJC.js";const M=a=>a?a instanceof K||a.toDate&&typeof a.toDate=="function"?a.toDate():a.seconds?new Date(a.seconds*1e3):new Date:new Date,P={courseId:null,searchQuery:"",dateRange:{start:null,end:null},nodeTypes:{designs:!0,builds:!0,tests:!0}},R={x:0,y:0,zoom:1},ie=q()(j(H((a,i)=>({designs:[],builds:[],tests:[],nodes:[],edges:[],selectedNodeId:null,hoveredNodeId:null,isLoading:!1,error:null,activePanel:null,layoutType:"horizontal",viewMode:"graph",isExpanded:!1,deleteDialog:{open:!1,nodeId:null,nodeType:null,nodeName:null},filters:P,viewport:R,fetchAllData:async(e,s=!1,t=[])=>{a({isLoading:!0,error:null});try{const{collection:d,query:r,where:c,getDocs:u,orderBy:h}=await L(async()=>{const{collection:g,query:I,where:b,getDocs:D,orderBy:l}=await import("./firebase-CTJJwFJC.js").then(V=>V.B);return{collection:g,query:I,where:b,getDocs:D,orderBy:l}},[]),{db:y}=await L(async()=>{const{db:g}=await import("./index-DwVItUg0.js").then(I=>I.K);return{db:g}},__vite__mapDeps([0,1,2,3,4]));let v;s&&t.length>0?v=r(d(y,"designs"),c("course","in",t),h("dateCreated","desc")):v=r(d(y,"designs"),c("userId","==",e),h("dateCreated","desc"));const n=(await u(v)).docs.map(g=>{const I=g.data();return{id:g.id,title:I.title||"",description:I.description||"",course:I.course||"",dateCreated:I.dateCreated,dateModified:I.dateModified,userId:I.userId||"",images:I.images||[],files:I.files||[]}}),f=n.map(g=>g.id);let C=[];if(f.length>0){const g=[];for(let b=0;b<f.length;b+=10){const D=f.slice(b,b+10),l=r(d(y,"builds"),c("design_ID","in",D));g.push(u(l))}C=(await Promise.all(g)).flatMap(b=>b.docs.map(D=>{const l=D.data();return{id:D.id,title:l.title||"",description:l.description||"",design_ID:l.design_ID||"",dateCreated:l.dateCreated,userId:l.userId||"",images:l.images||[],files:l.files||[]}}))}const T=C.map(g=>g.id);let Q=[];if(T.length>0){const g=[];for(let b=0;b<T.length;b+=10){const D=T.slice(b,b+10),l=r(d(y,"tests"),c("build_ID","in",D));g.push(u(l))}Q=(await Promise.all(g)).flatMap(b=>b.docs.map(D=>{const l=D.data();return{id:D.id,title:l.title||"",description:l.description||"",results:l.results||"",conclusions:l.conclusions||"",build_ID:l.build_ID||"",design_ID:l.design_ID||"",dateCreated:l.dateCreated,userId:l.userId||"",images:l.images||[],files:l.files||[]}}))}a({designs:n,builds:C,tests:Q,isLoading:!1}),i().buildGraph()}catch(d){console.error("Error fetching lab notebook data:",d),a({error:d instanceof Error?d.message:"Failed to fetch data",isLoading:!1})}},setDesigns:e=>{a({designs:e}),i().buildGraph()},addDesign:e=>{a(s=>({designs:[...s.designs,e]})),i().buildGraph()},updateDesignLocal:(e,s)=>{a(t=>({designs:t.designs.map(d=>d.id===e?{...d,...s}:d)})),i().buildGraph()},removeDesign:e=>{a(s=>({designs:s.designs.filter(t=>t.id!==e),builds:s.builds.filter(t=>t.design_ID!==e),tests:s.tests.filter(t=>t.design_ID!==e)})),i().buildGraph()},setBuilds:e=>{a({builds:e}),i().buildGraph()},addBuild:e=>{a(s=>({builds:[...s.builds,e]})),i().buildGraph()},updateBuildLocal:(e,s)=>{a(t=>({builds:t.builds.map(d=>d.id===e?{...d,...s}:d)})),i().buildGraph()},removeBuild:e=>{a(s=>({builds:s.builds.filter(t=>t.id!==e),tests:s.tests.filter(t=>t.build_ID!==e)})),i().buildGraph()},setTests:e=>{a({tests:e}),i().buildGraph()},addTest:e=>{a(s=>({tests:[...s.tests,e]})),i().buildGraph()},updateTestLocal:(e,s)=>{a(t=>({tests:t.tests.map(d=>d.id===e?{...d,...s}:d)})),i().buildGraph()},removeTest:e=>{a(s=>({tests:s.tests.filter(t=>t.id!==e)})),i().buildGraph()},buildGraph:()=>{const e=i(),{designs:s,builds:t,tests:d,filters:r}=e;let c=s,u=t,h=d;if(r.courseId){c=c.filter(f=>f.course===r.courseId);const o=c.map(f=>f.id);u=u.filter(f=>o.includes(f.design_ID));const n=u.map(f=>f.id);h=h.filter(f=>n.includes(f.build_ID))}if(r.searchQuery){const o=r.searchQuery.toLowerCase();c=c.filter(n=>n.title.toLowerCase().includes(o)||n.description.toLowerCase().includes(o)),u=u.filter(n=>n.title.toLowerCase().includes(o)||n.description.toLowerCase().includes(o)),h=h.filter(n=>n.title.toLowerCase().includes(o)||n.description.toLowerCase().includes(o))}r.nodeTypes.designs||(c=[]),r.nodeTypes.builds||(u=[]),r.nodeTypes.tests||(h=[]);const y=[],v=[];c.forEach((o,n)=>{const f=u.filter(T=>T.design_ID===o.id).length,C=h.filter(T=>T.design_ID===o.id).length;y.push({id:`design-${o.id}`,type:"designNode",position:{x:0,y:n*200},data:{type:"design",designId:o.id,label:o.title,title:o.title,description:o.description,dateCreated:M(o.dateCreated),dateModified:M(o.dateModified),userId:o.userId,images:o.images||[],files:o.files||[],course:o.course,buildCount:f,testCount:C}})}),u.forEach((o,n)=>{const f=h.filter(C=>C.build_ID===o.id).length;y.push({id:`build-${o.id}`,type:"buildNode",position:{x:400,y:n*180},data:{type:"build",buildId:o.id,designId:o.design_ID,label:o.title,title:o.title,description:o.description,dateCreated:M(o.dateCreated),dateModified:M(o.dateModified),userId:o.userId,images:o.images||[],files:o.files||[],testCount:f}}),v.push({id:`edge-design-${o.design_ID}-build-${o.id}`,source:`design-${o.design_ID}`,target:`build-${o.id}`,type:"smoothstep",animated:!1})}),h.forEach((o,n)=>{y.push({id:`test-${o.id}`,type:"testNode",position:{x:800,y:n*180},data:{type:"test",testId:o.id,buildId:o.build_ID,designId:o.design_ID,label:o.title,title:o.title,description:o.description,results:o.results,conclusions:o.conclusions,dateCreated:M(o.dateCreated),dateModified:M(o.dateModified),userId:o.userId,images:o.images||[],files:o.files||[]}}),v.push({id:`edge-build-${o.build_ID}-test-${o.id}`,source:`build-${o.build_ID}`,target:`test-${o.id}`,type:"smoothstep",animated:!1})}),a({nodes:y,edges:v})},selectNode:e=>{a({selectedNodeId:e}),e&&a({activePanel:"detail"})},setHoveredNode:e=>{a({hoveredNodeId:e})},updateNodePosition:(e,s)=>{a(t=>({nodes:t.nodes.map(d=>d.id===e?{...d,position:s}:d)}))},resetGraph:()=>{a({nodes:[],edges:[],selectedNodeId:null,hoveredNodeId:null})},setLoading:e=>a({isLoading:e}),setError:e=>a({error:e}),setActivePanel:e=>a({activePanel:e}),setLayoutType:e=>a({layoutType:e}),setViewMode:e=>a({viewMode:e}),setIsExpanded:e=>a({isExpanded:e}),openDeleteDialog:(e,s,t)=>a({deleteDialog:{open:!0,nodeId:e,nodeType:s,nodeName:t}}),closeDeleteDialog:()=>a({deleteDialog:{open:!1,nodeId:null,nodeType:null,nodeName:null}}),confirmDelete:async()=>{const e=i(),{nodeId:s,nodeType:t}=e.deleteDialog;if(!(!s||!t))try{const{labNotebookService:d}=await L(async()=>{const{labNotebookService:u}=await Promise.resolve().then(()=>X);return{labNotebookService:u}},void 0),r=e.nodes.find(u=>u.id.includes(s));if(!r)return;const c=r.data.userId;t==="build"?(await d.deleteBuild(s,c),i().removeBuild(s)):t==="test"&&(await d.deleteTest(s,c),i().removeTest(s)),i().closeDeleteDialog(),i().selectNode(null),i().setActivePanel(null),await i().fetchAllData(c,!1,[])}catch(d){console.error("Error deleting:",d),a({error:d instanceof Error?d.message:"Failed to delete"})}},setSelectedCourse:e=>{a(s=>({filters:{...s.filters,courseId:e}})),i().buildGraph()},setSearchQuery:e=>{a(s=>({filters:{...s.filters,searchQuery:e}})),i().buildGraph()},setDateRange:(e,s)=>{a(t=>({filters:{...t.filters,dateRange:{start:e,end:s}}})),i().buildGraph()},toggleNodeTypeFilter:e=>{a(s=>({filters:{...s.filters,nodeTypes:{...s.filters.nodeTypes,[e]:!s.filters.nodeTypes[e]}}})),i().buildGraph()},resetFilters:()=>{a({filters:P}),i().buildGraph()},setViewport:e=>a({viewport:e}),resetViewport:()=>a({viewport:R}),getGraphMetrics:()=>{const e=i();return{designCount:e.designs.length,buildCount:e.builds.length,testCount:e.tests.length,totalNodes:e.nodes.length,totalEdges:e.edges.length}},getNodeById:e=>i().nodes.find(s=>s.id===e),getDesignById:e=>i().designs.find(s=>s.id===e),getBuildById:e=>i().builds.find(s=>s.id===e),getTestById:e=>i().tests.find(s=>s.id===e),getBuildsByDesignId:e=>i().builds.filter(s=>s.design_ID===e),getTestsByBuildId:e=>i().tests.filter(s=>s.build_ID===e),reset:()=>{a({designs:[],builds:[],tests:[],nodes:[],edges:[],selectedNodeId:null,hoveredNodeId:null,isLoading:!1,error:null,activePanel:null,filters:P,viewport:R})}}),{name:"lab-notebook-storage",partialize:a=>({layoutType:a.layoutType,viewMode:a.viewMode,viewport:a.viewport})}),{name:"LabNotebookStore"}));class U{constructor(){$(this,"db",null)}initialize(){this.db||(this.db=J())}async createDesign(i){this.initialize();const e={title:i.title,description:i.description,course:i.course,userId:i.userId,dateCreated:_(),dateModified:_(),images:i.images||[],files:i.files||[]},s=await G(m(this.db,"designs"),e);return console.log("Design created with ID:",s.id),s.id}async updateDesign(i){this.initialize();const e={dateModified:_()};i.title!==void 0&&(e.title=i.title),i.description!==void 0&&(e.description=i.description),i.course!==void 0&&(e.course=i.course),i.images!==void 0&&(e.images=i.images),i.files!==void 0&&(e.files=i.files);const s=p(this.db,"designs",i.id);await z(s,e),console.log("Design updated:",i.id)}async deleteDesign(i,e){this.initialize();const s=S(m(this.db,"builds"),w("design_ID","==",i),w("userId","==",e)),t=await N(s);for(const d of t.docs){const r=d.id,c=S(m(this.db,"tests"),w("build_ID","==",r),w("userId","==",e)),u=await N(c);for(const h of u.docs)await B(p(this.db,"tests",h.id)),console.log("Test deleted:",h.id);await B(p(this.db,"builds",r)),console.log("Build deleted:",r)}await B(p(this.db,"designs",i)),console.log("Design deleted:",i)}async getDesign(i){this.initialize();const e=p(this.db,"designs",i),s=await E(e);if(s.exists()){const t=s.data();return{id:s.id,title:t.title||"",description:t.description||"",course:t.course||"",dateCreated:t.dateCreated,dateModified:t.dateModified,userId:t.userId||"",images:t.images||[],files:t.files||[]}}return null}async createBuild(i){this.initialize();const e={title:i.title,description:i.description,design_ID:i.designId,userId:i.userId,dateCreated:_(),dateModified:_(),images:i.images||[],files:i.files||[]},s=await G(m(this.db,"builds"),e);return console.log("Build created with ID:",s.id),s.id}async updateBuild(i){this.initialize();const e={dateModified:_()};i.title!==void 0&&(e.title=i.title),i.description!==void 0&&(e.description=i.description),i.images!==void 0&&(e.images=i.images),i.files!==void 0&&(e.files=i.files);const s=p(this.db,"builds",i.id);await z(s,e),console.log("Build updated:",i.id)}async deleteBuild(i,e){this.initialize();const s=S(m(this.db,"tests"),w("build_ID","==",i),w("userId","==",e)),t=await N(s);for(const d of t.docs)await B(p(this.db,"tests",d.id)),console.log("Test deleted:",d.id);await B(p(this.db,"builds",i)),console.log("Build deleted:",i)}async getBuild(i){this.initialize();const e=p(this.db,"builds",i),s=await E(e);if(s.exists()){const t=s.data();return{id:s.id,title:t.title||"",description:t.description||"",design_ID:t.design_ID||"",dateCreated:t.dateCreated,userId:t.userId||"",images:t.images||[],files:t.files||[]}}return null}async getBuildsByDesign(i){this.initialize();const e=S(m(this.db,"builds"),w("design_ID","==",i),k("dateCreated","desc"));return(await N(e)).docs.map(t=>{const d=t.data();return{id:t.id,title:d.title||"",description:d.description||"",design_ID:d.design_ID||"",dateCreated:d.dateCreated,dateModified:d.dateModified,userId:d.userId||"",images:d.images||[],files:d.files||[]}})}async createTest(i){this.initialize();const e={title:i.title,description:i.description,results:i.results,conclusions:i.conclusions,build_ID:i.buildId,design_ID:i.designId,userId:i.userId,dateCreated:_(),dateModified:_(),images:i.images||[],files:i.files||[]},s=await G(m(this.db,"tests"),e);return console.log("Test created with ID:",s.id),s.id}async updateTest(i){this.initialize();const e={dateModified:_()};i.title!==void 0&&(e.title=i.title),i.description!==void 0&&(e.description=i.description),i.results!==void 0&&(e.results=i.results),i.conclusions!==void 0&&(e.conclusions=i.conclusions),i.images!==void 0&&(e.images=i.images),i.files!==void 0&&(e.files=i.files);const s=p(this.db,"tests",i.id);await z(s,e),console.log("Test updated:",i.id)}async deleteTest(i,e){this.initialize(),await B(p(this.db,"tests",i)),console.log("Test deleted:",i)}async getTest(i){this.initialize();const e=p(this.db,"tests",i),s=await E(e);if(s.exists()){const t=s.data();return{id:s.id,title:t.title||"",description:t.description||"",results:t.results||"",conclusions:t.conclusions||"",build_ID:t.build_ID||"",design_ID:t.design_ID||"",dateCreated:t.dateCreated,dateModified:t.dateModified,userId:t.userId||"",images:t.images||[],files:t.files||[]}}return null}async getTestsByBuild(i){this.initialize();const e=S(m(this.db,"tests"),w("build_ID","==",i),k("dateCreated","desc"));return(await N(e)).docs.map(t=>{const d=t.data();return{id:t.id,title:d.title||"",description:d.description||"",results:d.results||"",conclusions:d.conclusions||"",build_ID:d.build_ID||"",design_ID:d.design_ID||"",dateCreated:d.dateCreated,dateModified:d.dateModified,userId:d.userId||"",images:d.images||[],files:d.files||[]}})}}let x=null;const A=()=>(x||(x=new U),x),W=A(),X=Object.freeze(Object.defineProperty({__proto__:null,getLabNotebookService:A,labNotebookService:W},Symbol.toStringTag,{value:"Module"}));export{W as l,ie as u};
